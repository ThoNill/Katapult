
plugins {
	id 'org.springframework.boot' version '2.4.0-M1'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'jacoco'

}


repositories {
    mavenLocal()
	mavenCentral()
    maven {
        url 'https://repo.spring.io/milestone'
    }

}


 dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
 
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.javamoney:moneta:1.2.1'
	implementation 'javax.money:money-api:1.1'
	implementation 'tho.nill:Grundgestein:0.0.1-SNAPSHOT'
	implementation 'tho.nill:katapult.verordnungen.modell:0.0.1-SNAPSHOT'
    implementation 'tho.nill:Vorlagen-compiler:0.0.1-SNAPSHOT'
    implementation 'tho.nill:Vorlagen-vorlagen:0.0.1-SNAPSHOT'
 
	
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.apache.derby:derby'
	runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.3.4.RELEASE'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.springframework.security:spring-security-test'
 	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
 }

group = 'tho.nill'
version = '0.0.1-SNAPSHOT'
description = 'Verordnungen Backend'
sourceCompatibility = '11'
targetCompatibility = '11'


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

